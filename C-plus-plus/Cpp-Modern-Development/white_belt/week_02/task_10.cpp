/* 
В этой задаче вам нужно присваивать номера автобусным маршрутам.
А именно, для каждого маршрута, заданного набором названий остановок, нужно либо выдать новый номер (первому маршруту — 1, второму — 2 и т. д.), 
либо вернуть номер существующего маршрута, которому соответствует такой набор остановок.
Наборы остановок, полученные друг из друга перестановкой остановок, считаются различными (см. пример).

Формат ввода
Сначала вводится количество запросов Q, затем Q описаний запросов.
Каждый запрос представляет собой положительное количество остановок N, за которым следуют разделённые пробелом N различных названий остановок 
соответствующего маршрута. Названия остановок состоят лишь из латинских букв и символов подчёркивания.

Формат вывода
Выведите ответ на каждый запрос в отдельной строке.
Если маршрут с данным набором остановок уже существует, в ответ на соответствующий запрос выведите Already exists for i, где i — номер маршрута с 
таким набором остановок. В противном случае нужно выделить введённому набору остановок новый номер i и вывести его в формате New bus i.
*/

#include <iostream>
#include <map>
#include <vector>
#include <string>
using namespace std;

map<vector<string>, int> routes;
int num_of_routes = 1;

int main() {
    int q;
    cin >> q;

    for (int i = 0; i < q; ++i) {
        vector<string> route;

        int n;
        cin >> n;

        for (int j = 0; j < n; ++j) {
            string stop;
            cin >> stop;
            route.push_back(stop);
        }

        if (routes.count(route) == 1) {
            cout << "Already exists for " << routes[route] << endl;
        } else {
            cout << "New bus " << num_of_routes << endl;
            routes[route] = num_of_routes;
            ++num_of_routes;
        }
    }

    return 0;
}
