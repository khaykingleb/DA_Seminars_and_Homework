/*
В этой задаче вам нужно присваивать номера автобусным маршрутам.
А именно, для каждого маршрута, заданного множеством названий остановок, нужно либо выдать новый номер
(первому маршруту — 1, второму — 2 и т. д.), либо вернуть номер существующего маршрута, которому соответствует
такое множество остановок.

Наборы остановок, которые можно получить друг из друга перестановкой элементов или добавлением/удалением повторяющихся,
следует считать одинаковыми.

# Формат ввода
Сначала вводится количество запросов Q, затем Q описаний запросов.
Каждый запрос представляет собой положительное количество остановок N, за которым следуют разделённые пробелом N
названий остановок соответствующего маршрута (не обязательно различных). Названия остановок состоят лишь из латинских букв и символов подчёркивания.

# Формат вывода
Выведите ответ на каждый запрос в отдельной строке.
Если маршрут с данным набором остановок уже существует, в ответ на соответствующий запрос выведите Already exists for i,
где i — номер маршрута с таким набором остановок. В противном случае нужно выделить введённому набору остановок новый
номер i и вывести его в формате New bus i.
 */


#include <iostream>
#include <map>
#include <set>
#include <string>

using namespace std;

int main() {
    map<set<string>, int> stops_to_buses;
    int cur_bus = 1;

    int q;
    cin >> q;

    for (int i = 0; i < q; ++i) {

        int n;
        cin >> n;

        set<string> new_route;

        for (int j = 0; j < n; ++j) {
            string stop;
            cin >> stop;
            new_route.insert(stop);
        }

        if (stops_to_buses.count(new_route) == 0) {
            stops_to_buses[new_route] = cur_bus;
            cout << "New bus " << cur_bus << endl;
            ++cur_bus;
        } else {
            cout << "Already exists for " << stops_to_buses[new_route] << endl;
        }

    }

    return 0;
}